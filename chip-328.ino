#include "chip328lib.h"
#include "ssd1306.h"
#include "sprite_pool.h"

SpritePool s_pool;
SPRITE sprite;
SPRITE sprite2;

const PROGMEM uint8_t heartImage[8] =
{
    0B00001110,
    0B00011111,
    0B00111111,
    0B01111110,
    0B01111110,
    0B00111101,
    0B00011001,
    0B00001110
};  

void interfaceDelayTimer(int value){
  //if(DT!=0) DT--;
  //glutTimerFunc(17, interfaceDelayTimer, 0);
}

void interfaceLoadROM(){
  
  /*chip328Memory[0x200] = 0x60;
  chip328Memory[0x201] = 0x03;
  chip328Memory[0x202] = 0x61;
  chip328Memory[0x203] = 0x38;
  chip328Memory[0x204] = 0x62;
  chip328Memory[0x205] = 0x00;
  chip328Memory[0x206] = 0xF0;
  chip328Memory[0x207] = 0x29;
  chip328Memory[0x208] = 0xD1;
  chip328Memory[0x209] = 0x25;
  chip328Memory[0x210] = 0x12;
  chip328Memory[0x211] = 0x00;*/
  int i;
  const PROGMEM uint8_t brix[280] = {0x6E, 0x05, 0x65, 0x00, 0x6B, 0x06, 0x6A, 0x00, 0xA3, 0x0C, 0xDA, 0xB1, 0x7A, 0x04, 0x3A, 0x40, 0x12, 0x08, 0x7B, 0x02, 0x3B, 0x12, 0x12, 0x06, 0x6C, 0x20, 0x6D, 0x1F, 0xA3, 0x10, 0xDC, 0xD1, 0x22, 0xF6, 0x60, 0x00, 0x61, 0x00, 0xA3, 0x12, 0xD0, 0x11, 0x70, 0x08, 0xA3, 0x0E, 0xD0, 0x11, 0x60, 0x40, 0xF0, 0x15, 0xF0, 0x07, 0x30, 0x00, 0x12, 0x34, 0xC6, 0x0F, 0x67, 0x1E, 0x68, 0x01, 0x69, 0xFF, 0xA3, 0x0E, 0xD6, 0x71, 0xA3, 0x10, 0xDC, 0xD1, 0x60, 0x04, 0xE0, 0xA1, 0x7C, 0xFE, 0x60, 0x06, 0xE0, 0xA1, 0x7C, 0x02, 0x60, 0x3F, 0x8C, 0x02, 0xDC, 0xD1, 0xA3, 0x0E, 0xD6, 0x71, 0x86, 0x84, 0x87, 0x94, 0x60, 0x3F, 0x86, 0x02, 0x61, 0x1F, 0x87, 0x12, 0x47, 0x1F, 0x12, 0xAC, 0x46, 0x00, 0x68, 0x01, 0x46, 0x3F, 0x68, 0xFF, 0x47, 0x00, 0x69, 0x01, 0xD6, 0x71, 0x3F, 0x01, 0x12, 0xAA, 0x47, 0x1F, 0x12, 0xAA, 0x60, 0x05, 0x80, 0x75, 0x3F, 0x00, 0x12, 0xAA, 0x60, 0x01, 0xF0, 0x18, 0x80, 0x60, 0x61, 0xFC, 0x80, 0x12, 0xA3, 0x0C, 0xD0, 0x71, 0x60, 0xFE, 0x89, 0x03, 0x22, 0xF6, 0x75, 0x01, 0x22, 0xF6, 0x45, 0x60, 0x12, 0xDE, 0x12, 0x46, 0x69, 0xFF, 0x80, 0x60, 0x80, 0xC5, 0x3F, 0x01, 0x12 , 0xCA, 0x61, 0x02, 0x80, 0x15, 0x3F, 0x01, 0x12, 0xE0, 0x80, 0x15, 0x3F, 0x01, 0x12, 0xEE, 0x80, 0x15, 0x3F, 0x01, 0x12, 0xE8, 0x60, 0x20, 0xF0, 0x18, 0xA3, 0x0E, 0x7E, 0xFF, 0x80, 0xE0, 0x80, 0x04, 0x61, 0x00, 0xD0, 0x11, 0x3E, 0x00, 0x12, 0x30, 0x12, 0xDE, 0x78, 0xFF, 0x48, 0xFE, 0x68 , 0xFF, 0x12, 0xEE, 0x78, 0x01, 0x48, 0x02, 0x68, 0x01, 0x60, 0x04, 0xF0, 0x18, 0x69, 0xFF, 0x12, 0x70, 0xA3, 0x14, 0xF5, 0x33, 0xF2, 0x65, 0xF1, 0x29, 0x63, 0x37, 0x64, 0x00, 0xD3, 0x45, 0x73, 0x05, 0xF2, 0x29, 0xD3, 0x45, 0x00, 0xEE, 0xE0, 0x00, 0x80, 0x00, 0xFC, 0x00, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00};
  for(i=0;i<280;i++){
    chip328Memory[i+512]=brix[i];
  }
}

/*void interfaceDisplayWrite(){
  int i=0,j=0;
  s_pool.setRect( (SSD1306_RECT) { 0, 0, 15, 7 } );
  sprite = ssd1306_createSprite( 119, 0, 1, chip328Display[7][0] );
  s_pool.add( sprite );
  sprite2 = ssd1306_createSprite( 64, 30, sizeof(heartImage), heartImage );
  s_pool.add( sprite2 );
  //s_pool.refreshScreen();
  s_pool.drawSprites();
  
}*/
void interfaceDisplayWrite(){
  int i=0,j=0;
  sprite = ssd1306_createSprite( 32, 8, 8*8, heartImage );
  s_pool.add( sprite );
  s_pool.refreshScreen();
  /*for(j=0;j<32;j++){
    for(i=0;i<8;i++){
      if((chip328Display[i][j]>>7)&0b00000001) {
        ssd1306_putPixel((0+i*8),j);
      }
      if((chip328Display[i][j]>>6)&0b00000001) {
        ssd1306_putPixel((1+i*8),j);
      }
      if((chip328Display[i][j]>>5)&0b00000001) {
        ssd1306_putPixel((2+i*8),j);
      }
      if((chip328Display[i][j]>>4)&0b00000001) {
        ssd1306_putPixel((3+i*8),j);
      }
      if((chip328Display[i][j]>>3)&0b00000001) {
        ssd1306_putPixel((4+i*8),j);
      }
      if((chip328Display[i][j]>>2)&0b00000001) {
        ssd1306_putPixel((5+i*8),j);
      }
      if((chip328Display[i][j]>>1)&0b00000001) {
        ssd1306_putPixel((6+i*8),j);
      }
      if((chip328Display[i][j])&0b00000001) {
        ssd1306_putPixel((7+i*8),j);
      }
    }
  }*/
}

void setup(void) {
    //Serial.begin(9600);
    chip328Begin();
    interfaceLoadROM();
    ssd1306_128x64_i2c_init();
    s_pool.setRect( (SSD1306_RECT) { 0, 0, 15, 7 } );
}

void loop(void) {
  //static unsigned long emuMillis = 0;
  //if(millis()-emuMillis > 50){
    //emuMillis = millis();
    chip328Emulate();
    DT=0;
  //}
  interfaceDisplayWrite();
}

